version: '3'

tasks:
  # Backend tasks
  install-backend:
    desc: Install backend (Python/Poetry) dependencies
    dir: backend
    cmds:
      - poetry install

  run-backend:
    desc: Run backend in development mode (with Poetry, DB via docker-compose)
    dir: backend
    cmds:
      - docker-compose up -d
      - poetry run uvicorn main:app --reload
    preconditions:
      - sh: "docker ps --filter 'name=lukalibre-db' --filter 'status=running' --format '{{.Names}}' | grep lukalibre-db"
        msg: "Database container 'lukalibre-db' is not running, starting with docker-compose up -d."
    sources: [../docker-compose.yml]
    silent: false
    status:
      - '[ $(docker ps --filter "name=lukalibre-db" --filter "status=running" --format "{{.Names}}") ]'
    deps: []
    env: {}
    ignore_error: false
    interactive: true
    post:
      - docker-compose stop

  test-backend:
    desc: Run backend tests (with Poetry, DB via docker-compose)
    dir: backend
    cmds:
      - docker-compose up -d
      - poetry run pytest
    post:
      - docker-compose stop

  # Frontend tasks
  install-frontend:
    desc: Install frontend (Svelte) dependencies
    dir: frontend
    cmds:
      - npm install

  run-frontend:
    desc: Run frontend in development mode
    dir: frontend
    cmds:
      - npm run dev

  build-frontend:
    desc: Build production frontend
    dir: frontend
    cmds:
      - npm run build

  test-frontend:
    desc: Run frontend tests
    dir: frontend
    cmds:
      - npm run test

  # Full project
  install:
    desc: Install both backend and frontend dependencies
    cmds:
      - task: install-backend
      - task: install-frontend

  dev:
    desc: Run backend and frontend in development mode (parallel)
    cmds:
      - task: run-backend &
      - task: run-frontend

  test:
    desc: Run backend and frontend tests
    cmds:
      - task: test-backend
      - task: test-frontend
